{"version":3,"sources":["./src/app/services/shared/toast.service.ts","./src/environments/environment.ts","./src/app/http-interceptor/http-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/authentication/auth.service.ts","./src/app/http-interceptor/index.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/authentication/register/register.component.ts","./src/app/authentication/register/register.component.html"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition\n} from \"@angular/material/snack-bar\";\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ToastService {\n  constructor(private matSnackbar: MatSnackBar) {}\n\n  openSnackbar(msg: string) {\n    const horizontalPosition: MatSnackBarHorizontalPosition = \"center\";\n    const verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n    this.matSnackbar.open(msg, \"End Now\", {\n      duration: 1000,\n      horizontalPosition: horizontalPosition,\n      verticalPosition: verticalPosition\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3003/',\n  adminApiUrl: 'http://localhost:3002/'\n};\n\n//AIzaSyCFPRapf51Ws6ELOHUpYPpvofDeen4EZsI\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    baseUrl = \"\";\n\n    constructor() { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler) {\n        if(request.url.includes('category')) {\n            this.baseUrl = environment.adminApiUrl;\n        }\n        else if(request.url.includes('maps')) {\n            this.baseUrl = '';\n        } else {\n            this.baseUrl = environment.apiUrl;\n        }\n        let requestObject = {\n            url: `${this.baseUrl}${request.url}`,\n            setHeaders: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${sessionStorage.getItem('token')}`,\n                Accept: 'application/json'\n            }\n        };\n\n        if (request.url === 'users/admin/export') {\n            requestObject['responseType'] = 'blob';\n        }\n\n        if(request.url.includes('products/add-product-images')) {\n            delete requestObject['setHeaders']['Content-Type'];\n            delete requestObject['setHeaders']['Accept']; \n        }\n\n        const authReq = request.clone(requestObject);\n        return next.handle(authReq).pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error: HttpErrorResponse) {\n        return throwError(error);\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'seller-frontend';\n}\n","<router-outlet></router-outlet>","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n  error = \"\";\n  constructor(private http: HttpClient) {}\n\n  public isAuthenticated(): boolean {\n    const token = sessionStorage.getItem(\"token\");\n    return token ? true : false;\n  }\n\n  register(req) {\n    return this.http.post(\"users/signup\", req);\n  }\n\n  login(req) {\n    return this.http.post(\"users/login\", req).pipe(\n      catchError(error => {\n        return error;\n      })\n    );\n  }\n\n  generateOtp(req) {\n    return this.http.post(\"verify/generate-otp\", req);\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './http-interceptor';\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\n// import { RegisterComponent } from './authentication/register/register.component';\nimport { MDBBootstrapModule } from \"angular-bootstrap-md\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n// import { AuthService } from './authentication/auth.service';\nimport { HttpClientModule } from \"@angular/common/http\";\n// import { SellerService } from './seller/seller.service';\nimport { httpInterceptorProviders } from \"./http-interceptor\";\n// import { ProductService } from './product/product.service';\n\nimport { SellerListingComponent } from \"./seller/seller-listing/seller-listing.component\";\nimport { SellerProductListingComponent } from \"./seller/seller-product-listing/seller-product-listing.component\";\nimport { SellerProfilePageComponent } from \"./seller/seller-profile-page/seller-profile-page.component\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n@NgModule({\n  declarations: [\n    AppComponent\n    //RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    BrowserAnimationsModule\n  ],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './authentication/login/login.component';\n// import { AddProductsComponent } from './add-products/add-products.component';\n// import { LoginComponent } from './auth1/login/login.component';\nimport { RegisterComponent } from './authentication/register/register.component';\n// import { ManageInventoryComponent } from './inventory/manage-inventory/manage-inventory.component';\n// import { SellerActiveDashboardComponent } from './seller-active-dashboard/seller-active-dashboard.component';\n// import { SellerEmailVerifiedComponent } from './seller1/seller-email-verified/seller-email-verified.component';\n// import { SellerBankDetailsComponent } from './seller1/seller-bank-details/seller-bank-details.component';\n// import { SellerDashboardComponent } from './seller1/seller-dashboard/seller-dashboard.component';\n// import { SellerGstinDetailsComponent } from './seller1/seller-gstin-details/seller-gstin-details.component';\n// import { SellerWelcomePageComponent } from './seller1/seller-welcome-page/seller-welcome-page.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: '/auth/register'},\n  // {path: 'login', component: LoginComponent},\n  // {path: 'register', component: RegisterComponent},\n   {path: 'auth', loadChildren: () => import('./authentication/authentication.module').then(module => module.AuthenticationModule)},\n   {path: 'product', loadChildren: () => import('./product/product.module').then(module => module.ProductModule)},\n   {path: 'inventory', loadChildren: () => import('./inventory/inventory.module').then(module => module.InventoryModule)},\n   {path: 'seller', loadChildren: () => import('./seller/seller.module').then(module => module.SellerModule)},\n  {path: '**', component: RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\nimport { AuthService } from \"../auth.service\";\nimport { Router } from \"@angular/router\";\nimport { ToastService } from \"src/app/services/shared/toast.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  submitFormAttempt: boolean;\n  mobile = null;\n  registerSteps = {\n    step1: true,\n    step2: false,\n    step3: false\n  };\n  show = false;\n  cpShow = false;\n  password: any;\n  cfPassword: any;\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService\n  ) {}\n\n  ngOnInit(): void {\n    this.password = \"password\";\n    this.cfPassword = \"password\";\n    this.registerForm = this.fb.group({\n      name: [\"\", [Validators.required]],\n      email: [\"\", [Validators.email, Validators.required]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]],\n      confirmPassword: [\"\", [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  generateOtp(valid) {\n    if (!valid) {\n      return;\n    }\n    // this.authService.generateOtp({mobileNum:this.mobile}).subscribe(data => {\n    //   console.log('dataaaa',data);\n    //   this.registerSteps.step1 = false;\n    //   this.registerSteps.step3 = true;\n    // }, error => {\n    //   console.log(error);\n    // })\n\n    this.registerSteps.step1 = false;\n    this.registerSteps.step3 = true;\n\n    //console.log('12121', this.mobile)\n  }\n\n  submitRegisterForm(valid) {\n    this.submitFormAttempt = true;\n    if (!valid) {\n      return;\n    }\n    let reqData = {\n      mobile: this.mobile,\n      name: this.registerForm.controls[\"name\"].value,\n      email: this.registerForm.controls[\"email\"].value,\n      password: this.registerForm.controls[\"password\"].value\n    };\n\n    this.authService.register(reqData).subscribe(\n      (data: any) => {\n        console.log(data);\n        if (data.code === 400) {\n          this.toastService.openSnackbar(data.message);\n        } else {\n          this.router.navigateByUrl(\"/auth/login\");\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  togglePassword() {\n    if (this.password === \"password\") {\n      this.password = \"text\";\n      this.show = true;\n    } else {\n      this.password = \"password\";\n      this.show = false;\n    }\n  }\n\n  toggelConfirmPassword() {\n    if (this.cfPassword === \"password\") {\n      this.cfPassword = \"text\";\n      this.cpShow = true;\n    } else {\n      this.cfPassword = \"password\";\n      this.cpShow = false;\n    }\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row d-flex justify-content-center\">\n        \n        <div class=\"col-md-5 col-lg-4 col-sm-8\">\n            <div class=\"d-flex justify-content-center\">\n                <img src=\"https://mdbootstrap.com/img/logo/mdb-transaprent-noshadows.png\" alt=\"Logo\" class=\"my-3 mx-auto\">\n            </div>\n            <!-- Phone Number -->\n            <div class=\"card my-3\" *ngIf=\"registerSteps.step1\">\n                <div class=\"card-body\">\n\n                    <!-- Title -->\n                    <h4 class=\"card-title\"><b>Verify Mobile Number</b></h4>\n                    <!-- Text -->\n                    <form #verifyMobileNumberForm=\"ngForm\" class=\"text-left\" (ngSubmit)=\"generateOtp(verifyMobileNumberForm.valid)\">\n                        <!-- Mobile Number -->\n                        <label for=\"\" class=\"m-0 small mt-3\">Enter mobile number below</label>\n                        <input name=\"mobile\" type=\"text\" id=\"defaultSignupFormEmail\" [(ngModel)]=\"mobile\" class=\"form-control\" placeholder=\"Enter 10 digit mobile number\" oninput=\"this.value=this.value.replace(/[^\\d]/,'')\"\n                         maxlength=\"10\" minlength=\"10\" autocomplete=\"off\" required>\n                        <p *ngIf=\"verifyMobileNumberForm.submitted && !mobile\" class=\"deep-orange-text small m-0\">\n                            Please provide a mobile number!\n                        </p>\n                       <p *ngIf=\"verifyMobileNumberForm.submitted && verifyMobileNumberForm.invalid\" class=\"deep-orange-text small m-0\">\n                            Please enter upto 10 digits\n                       </p>\n                        <!-- <p *ngIf=\"verifyMobileNumberForm.submitted && mobile.minLength\">MINLENGTH</p> -->\n                        <!-- <p class=\"m-0 small mt-3\">We'll send you verification code on this number</p> -->\n\n                        <!-- Generate OTP -->\n                        <button class=\"btn elegant-color text-white btn-sm btn-block my-4 rounded\" type=\"submit\">Next</button>\n                    </form>\n\n                    <form class=\"text-left\" action=\"#!\" *ngIf=\"registerSteps.step2\">\n                        <!-- OTP Number -->\n                        <label for=\"\" class=\"m-0 small mt-3\">Enter OTP below</label>\n                        <input type=\"text\" id=\"defaultSignupFormEmail\" class=\"form-control\" placeholder=\"\" oninput=\"this.value=this.value.replace(/[^\\d]/,'')\" maxlength=\"6\" autocomplete=\"off\">\n\n                        <!-- Generate OTP -->\n                        <button class=\"btn elegant-color text-white btn-sm btn-block my-4 rounded\" type=\"submit\">Verify OTP</button>\n\n                    </form>\n                </div>\n            </div>\n\n            <!-- Signup Form -->\n            <div class=\"card my-3\" *ngIf=\"registerSteps.step3\">\n                <div class=\"card-body\">\n\n                    <!-- Title -->\n                    <h4 class=\"card-title\"><b>Create Account</b></h4>\n                    <!-- Text -->\n                    <form class=\"text-left\" [formGroup]=\"registerForm\" (ngSubmit)=\"submitRegisterForm(registerForm.valid)\">\n\n                        <!-- Name -->\n                        <label for=\"\" class=\"m-0 small mt-3\">Name</label>\n                        <input type=\"email\" formControlName=\"name\" id=\"defaultSignupFormEmail\" class=\"form-control\" placeholder=\"Your Name\">\n                        <p *ngIf=\"!registerForm.get('name').valid && submitFormAttempt && registerForm.get('name').hasError('required')\" class=\"deep-orange-text small m-0\">\n                            Please provide a name!\n                        </p>\n\n                        <!-- Email -->\n                        <label for=\"\" class=\"m-0 small mt-3\">Email</label>\n                        <input type=\"email\" formControlName=\"email\" id=\"defaultSignupFormEmail\" class=\"form-control\" placeholder=\"E-mail\">\n                        <p *ngIf=\"!registerForm.get('email').valid && submitFormAttempt && registerForm.get('email').hasError('required')\" class=\"deep-orange-text small m-0\">\n                            Please provide a email!\n                        </p>\n                        <p *ngIf=\"registerForm.get('email').hasError('email')\" class=\"deep-orange-text small m-0\">\n                            Please provide a valid email!\n                        </p>\n                        <!-- Password -->\n                        <label for=\"\" class=\"m-0 small mt-3\">Password</label>\n                        <span style=\"display:flex\">\n                                <input type=\"password\" \n                                formControlName=\"password\" \n                                id=\"defaultSignupFormPassword\" \n                                class=\"form-control\" \n                                placeholder=\"Password\"\n                                [type]=\"password\">\n                                <button class=\"btn border\" (click)=\"togglePassword()\" type=\"button\"> \n                                    <i class=\"fa fa-eye\" aria-hidden=\"true\" *ngIf=\"!show\"></i>\n                                    <i class=\"fa fa-eye-slash\" aria-hidden=\"true\" *ngIf=\"show\"></i>\n                                </button>\n                        </span>\n                        <p *ngIf=\"!registerForm.get('password').valid && submitFormAttempt && registerForm.get('password').hasError('required')\" class=\"deep-orange-text small m-0\">\n                            Please provide a password!\n                        </p>\n                        <p *ngIf=\"!registerForm.get('password').valid && submitFormAttempt && registerForm.get('password').hasError('minLength')\" class=\"deep-orange-text small m-0\">\n                            Please provide a password with atleast 6 characters!\n                        </p>\n                        <!-- Repeat Password -->\n                        <label for=\"\" class=\"m-0 small mt-3\">Confirm Password</label>\n                        <span style=\"display: flex\">\n                        <input type=\"password\"\n                         formControlName=\"confirmPassword\" \n                         id=\"defaultSignupFormPassword\" \n                         class=\"form-control\" \n                         placeholder=\"Confirm Password\"\n                         [type]=\"cfPassword\">\n                                <button class=\"btn border\" (click)=\"toggelConfirmPassword()\" type=\"button\"> \n                                        <i class=\"fa fa-eye\" aria-hidden=\"true\" *ngIf=\"!cpShow\"></i>\n                                        <i class=\"fa fa-eye-slash\" aria-hidden=\"true\" *ngIf=\"cpShow\"></i>\n                                    </button>\n                        </span>\n                        <p *ngIf=\"!registerForm.get('confirmPassword').valid && submitFormAttempt && registerForm.get('confirmPassword').hasError('required')\" class=\"deep-orange-text small m-0\">\n                            Please provide a confirm password!\n                        </p>\n                        <p *ngIf=\"!registerForm.get('confirmPassword').valid && submitFormAttempt && registerForm.get('confirmPassword').hasError('minLength')\" class=\"deep-orange-text small m-0\">\n                            Please provide a confirm password with atleast 6 characters!\n                        </p>\n                        <p *ngIf=\"registerForm.get('confirmPassword').dirty && registerForm.get('confirmPassword').value !== registerForm.get('password').value\" class=\"deep-orange-text small m-0\">\n                            Password does not match!\n                        </p>\n                        <!-- Sign in button -->\n                        <button class=\"btn elegant-color text-white btn-sm btn-block my-4 rounded\" type=\"submit\">Create Account</button>\n                        <p class=\"small\">By continuing, you agree to our <a href=\"\">Terms of Use</a> and <a href=\"\">Privacy Policy</a>.</p>\n\n                    </form>\n                </div>\n            </div>\n<!-- <ng-container *ngIf=\"registerSteps.step3\"> -->\n            <hr class=\"my-4\">\n            <div class=\"d-flex justify-content-center\">\n                <p class=\"mx-auto bg-white small d-inline-block px-2 text-black-50\" style=\"margin-top: -36px;\">Already a Member ?</p>\n            </div>\n            <!-- Create Account Button -->\n            <a routerLink=\"/auth/login\" role=\"button\" class=\"btn-block unique-color text-white btn btn-sm rounded my-3\">Login your account</a>  \n        <!-- </ng-container>           -->\n        </div>\n    </div>\n    \n</div>"],"sourceRoot":"webpack:///"}