{"version":3,"sources":["webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html"],"names":["AuthenticationModule","declarations","imports","providers","routes","path","component","AuthenticationRoutingModule","forChild","exports","LoginComponent","fb","authService","router","toastService","loginError","loginForm","group","email","required","password","rememberMe","JSON","parse","localStorage","getItem","controls","setValue","valid","loginAttempt","reqData","value","login","subscribe","data","code","console","log","message","errorMessage","openSnackbar","sessionStorage","setItem","stringify","userData","accountNumber","navigateByUrl","error","selector","templateUrl","styleUrls"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from \"./login/login.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { AuthService } from \"./auth.service\";\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { httpInterceptorProviders } from '../http-interceptor';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthenticationRoutingModule,\n    MDBBootstrapModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthService, httpInterceptorProviders]\n})\nexport class AuthenticationModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from \"./login/login.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nconst routes: Routes = [\n  //{path: '', pathMatch: 'full', redirectTo: '/register'},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\nimport { AuthService } from \"../auth.service\";\nimport { Router } from \"@angular/router\";\nimport { ToastService } from \"src/app/services/shared/toast.service\";\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loginAttempt: boolean;\n  loginError = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: [\"\", [Validators.email, Validators.required]],\n      password: [\"\", [Validators.required]],\n      rememberMe: [false]\n    });\n    if (JSON.parse(localStorage.getItem(\"remember\"))) {\n      this.loginForm.controls[\"rememberMe\"].setValue(true);\n      this.loginForm.controls[\"email\"].setValue(localStorage.getItem(\"email\"));\n      this.loginForm.controls[\"password\"].setValue(\n        localStorage.getItem(\"password\")\n      );\n    }\n  }\n\n  login(valid) {\n    this.loginAttempt = true;\n    if (!valid) {\n      return;\n    }\n    let reqData = {\n      email: this.loginForm.controls[\"email\"].value,\n      password: this.loginForm.controls[\"password\"].value\n    };\n\n    this.authService.login(reqData).subscribe(\n      (data: any) => {\n        if (data.code === 400) {\n          console.log(\"Error\", data.message);\n          const errorMessage = data.message\n            ? data.message\n            : \"Unknown Error Occured!\";\n          this.toastService.openSnackbar(errorMessage);\n          return;\n        }\n        if (data.code === 200) {\n          console.log(data);\n          sessionStorage.setItem(\"token\", data[\"accessToken\"]);\n          localStorage.setItem(\"user\", JSON.stringify(data[\"data\"]));\n          if (this.loginForm.controls[\"rememberMe\"].value) {\n            localStorage.setItem(\"remember\", JSON.stringify(true));\n            localStorage.setItem(\n              \"email\",\n              this.loginForm.controls[\"email\"].value\n            );\n            localStorage.setItem(\n              \"password\",\n              this.loginForm.controls[\"password\"].value\n            );\n          } else {\n            localStorage.setItem(\"remember\", JSON.stringify(false));\n            localStorage.setItem(\"email\", \"\");\n            localStorage.setItem(\"password\", \"\");\n          }\n          let userData = JSON.parse(localStorage.getItem(\"user\"));\n          if (userData && userData.accountNumber)\n            this.router.navigateByUrl(\"/seller/active-dashboard\");\n          else this.router.navigateByUrl(\"/seller/active-dashboard\");\n        } else {\n          this.loginError = data[\"messgae\"];\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-md-5 col-lg-4 col-sm-8\">\n            <!-- Login Form -->\n            <div class=\"card\">\n                <div class=\"card-body\">\n\n                    <!-- Title -->\n                    <h4 class=\"card-title\"><b>Sign In</b></h4>\n                    <!-- Text -->\n                    <form class=\"text-left\" [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm.valid)\">\n\n                        <!-- Email -->\n                        <label for=\"\" class=\"m-0 small mt-4\">Email</label>\n                        <input formControlName=\"email\" type=\"email\" id=\"defaultLoginFormEmail\" class=\"form-control\" placeholder=\"E-mail\">\n                        <p *ngIf=\"!loginForm.get('email').valid && loginAttempt && loginForm.get('email').hasError('required')\" class=\"deep-orange-text small m-0\">\n                            Please provide a email!\n                        </p>\n                        <p *ngIf=\"loginForm.get('email').hasError('email')\" class=\"deep-orange-text small m-0\">\n                            Please provide a valid email!\n                        </p>\n                        <!-- Password -->\n                        <label for=\"\" class=\"m-0 small mt-4\">Password</label>\n                        <input formControlName=\"password\" type=\"password\" id=\"defaultLoginFormPassword\" class=\"form-control\" placeholder=\"Password\">\n                        <p *ngIf=\"!loginForm.get('password').valid && loginAttempt && loginForm.get('password').hasError('required')\" class=\"deep-orange-text small m-0\">\n                            Please provide a password!\n                        </p>\n                        <span *ngIf=\"loginError\">{{loginError}}</span>\n                        <div class=\"d-md-flex d-block mt-3 justify-content-between\">\n                            <div>\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input name=\"rememberMe\" formControlName=\"rememberMe\" type=\"checkbox\" class=\"custom-control-input\" id=\"defaultLoginFormRemember\">\n                                    <label class=\"custom-control-label\" for=\"defaultLoginFormRemember\">Remember me</label>\n                                </div>\n                            </div>\n\n                            <div>\n                                <a href=\"\" class=\"small\">Forgot password?</a>\n                            </div>\n                        </div>\n\n                        <!-- Sign in button -->\n                        <button class=\"btn elegant-color text-white btn-sm btn-block my-4 rounded\" type=\"submit\">Sign in</button>\n                        <p class=\"small\">By continuing, you agree to our <a href=\"\">Terms of Use</a> and <a href=\"\">Privacy Policy</a>.</p>\n\n                    </form>\n                </div>\n            </div>\n\n            <hr class=\"my-4\">\n            <div class=\"d-flex justify-content-center\">\n                <p class=\"mx-auto bg-white small d-inline-block px-2 text-black-50\" style=\"margin-top: -36px;\">New Member ?</p>\n            </div>\n            \n\n            <!-- Create Account Button -->\n            <a href=\"\" role=\"button\" class=\"btn-block unique-color text-white btn btn-sm rounded\">Create your account</a>\n        </div>\n    </div>\n    \n</div>"]}