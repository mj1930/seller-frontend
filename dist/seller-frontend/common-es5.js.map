{"version":3,"sources":["webpack:///src/app/product/product.service.ts","webpack:///src/app/shared/services/auth-guard/auth-guard.service.ts"],"names":["ProductService","http","req","post","body","term","get","id","providedIn","AuthGuardService","auth","router","isAuthenticated","navigate"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaA,c;AAEX,gCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;qCAE9BC,G,EAAK;AACd,mBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,2BAAf,EAA4CD,GAA5C,CAAP;AACD;;;8CAEmBA,G,EAAK;AACvB,mBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,gCAAf,EAAiDD,GAAjD,CAAP;AACD;;;gDAEqBA,G,EAAK;AACzB,mBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,mCAAf,EAAoDD,GAApD,CAAP;AACD;;;2CAEgBA,G,EAAK;AACpB,mBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,6BAAf,EAA8CD,GAA9C,CAAP;AACD;;;gDAEqBA,G,EAAK;AACzB,mBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,gCAAf,EAAiDD,GAAjD,CAAP;AACD;;;wCAEaE,I,EAAM;AAClB,mBAAO,KAAKH,IAAL,CAAUE,IAAV,CAAe,6BAAf,EAA8CC,IAA9C,CAAP;AACD;;;2CAEgBA,I,EAAM;AACrB,mBAAO,KAAKH,IAAL,CAAUE,IAAV,CAAe,gCAAf,EAAiDC,IAAjD,CAAP;AACD;;;sCAEWF,G,EAAK;AACf,mBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAe,2BAAf,EAA4CD,GAA5C,CAAP;AACD;;;wCAEaG,I,EAAM;AAClB,mBAAO,KAAKJ,IAAL,CAAUK,GAAV,yCAA+CD,IAA/C,EAAP;AACD;;;4CAEiBE,E,EAAI;AACpB,mBAAO,KAAKN,IAAL,CAAUK,GAAV,wCAA8CC,EAA9C,EAAP;AACD;;;;;;;yBA1CUP,c,EAAc,uH;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;wEAEDA,c,EAAc;gBAH1B,wDAG0B;iBAHf;AACVQ,sBAAU,EAAE;AADF,W;AAGe,U;;;;;;;;;;;;;;;;;;;;;;ACN3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,gB;AACX,kCAAmBC,IAAnB,EAA6CC,MAA7C,EAA6D;AAAA;;AAA1C,eAAAD,IAAA,GAAAA,IAAA;AAA0B,eAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;wCACpD;AACT,gBAAI,CAAC,KAAKD,IAAL,CAAUE,eAAV,EAAL,EAAkC;AAChC,mBAAKD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;;;;;;;yBARUJ,gB,EAAgB,gI,EAAA,8G;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACVD,sBAAU,EAAE;AADF,W;AAGiB,U","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  addProduct(req) {\n    return this.http.post('products/add-product-info', req);\n  }\n\n  addProductVariation(req) {\n    return this.http.post('products/add-product-variation', req);\n  }\n\n  addProductSellingInfo(req) {\n    return this.http.post('products/add-product-selling-info', req);\n  }\n\n  addProductImages(req) {\n    return this.http.post('products/add-product-images', req);\n  }\n\n  addProductDescription(req) {\n    return this.http.post('products/add-product-desc-info', req);\n  }\n\n  getCategories(body) {\n    return this.http.post('category/get-all-categories', body); \n  }\n\n  getSubCategories(body) {\n    return this.http.post('category/get-all-subcategories', body); \n  }\n\n  getProducts(req) {\n    return this.http.post('products/get-all-products', req);\n  }\n\n  searchProduct(term) {\n    return this.http.get(`products/search-products?term=${term}`);\n  }\n\n  getProductDetails(id) {\n    return this.http.get(`products/get-product-details/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../../../authentication/auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n"]}